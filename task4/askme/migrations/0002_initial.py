# Generated by Django 4.1.7 on 2023-04-17 06:52

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('askme', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Название тега')),
            ],
            options={
                'db_table': 'Tags',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, verbose_name='Имя')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('rating', models.IntegerField(verbose_name='Рейтинг')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='./static/img/user_avatars', verbose_name='Фото пользователя')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Сотрудник')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='Дата регистрации')),
            ],
            options={
                'db_table': 'Users',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Заголовок')),
                ('text', models.CharField(max_length=3000, verbose_name='Текст вопроса')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='askme.user', verbose_name='Автор')),
                ('tag', models.ManyToManyField(related_name='questions', to='askme.tag', verbose_name='Теги')),
            ],
            options={
                'db_table': 'Questions',
            },
        ),
        migrations.CreateModel(
            name='Mark',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('l', 'like'), ('d', 'dislike')], max_length=1, verbose_name='Оценка')),
                ('from_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='marks_given', to='askme.user', verbose_name='Отправитель')),
                ('to_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='marks_received', to='askme.user', verbose_name='Получатель')),
            ],
            options={
                'db_table': 'Marks',
            },
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=3000, verbose_name='Текст ответа')),
                ('status', models.CharField(choices=[('r', 'right'), ('u', 'unknown')], default=('u', 'unknown'), max_length=10, verbose_name='Статус')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answer_author', to='askme.user', verbose_name='Автор')),
                ('to_question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answer_to_question', to='askme.question', verbose_name='Вопрос')),
            ],
            options={
                'db_table': 'Answers',
            },
        ),
    ]
